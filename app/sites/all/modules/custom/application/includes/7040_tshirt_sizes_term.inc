<?php
/**
 * @file
 * This file holds long update functions.
 */

function application_7040_tshirt_sizes_term() {
  $terms_data = application_get_tshirt_sizes();
  $taxonomy = taxonomy_vocabulary_machine_name_load('tshirt_sizes');
  application_save_terms_recursively($taxonomy->vid,$terms_data);
}

/**
 * T-shirt sizes term.
 */

function application_get_tshirt_sizes() {
  $tshirt_sizes_categories = array(
    'Men' => array('S','M','L','XL','XXL',),
    'Women' => array('S','M','L','XL',),
  );
  return $tshirt_sizes_categories;
}

/**
 * Save recursive array of terms for a vocabulary.
 *
 *
 * @param int $vid Vocabulary id
 * @param array $terms Recursive array of terms
 * @param int $ptid Parent term id (generated by taxonomy_save_term, when =0 then no parent)
 *
 * taxonomy_term_save ($term) gives back saved tid in $term
 *
 */
function application_save_terms_recursively($vid, &$terms, $ptid=0) {
  $weight = 0;
  foreach ($terms as $k => $v) {
    // simple check for numeric indices (term array without children)
    $name = is_string($k) ? $k : $v;
    $term = new stdClass();
    $term->vid = $vid;
    $term->name = $name;
    $term->parent = $ptid;
    $term->weight = $weight;
    if($ptid !=0) {
      $weight ++;
    }
    taxonomy_term_save($term);
    if (is_array($v) && count($v)) {
      application_save_terms_recursively($vid, $terms[$k], $term->tid);
    }
  }
}
